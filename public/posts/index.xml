<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Posts on Jay Log</title>
    <link>http://jaym-oh.github.io/posts/</link>
    <description>Recent content in Posts on Jay Log</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Fri, 29 Mar 2024 00:00:00 +0000</lastBuildDate>
    <atom:link href="http://jaym-oh.github.io/posts/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Sorting Problem</title>
      <link>http://jaym-oh.github.io/posts/algorithm/sorting/sorting_2/</link>
      <pubDate>Fri, 29 Mar 2024 17:20:00 +0000</pubDate>
      <guid>http://jaym-oh.github.io/posts/algorithm/sorting/sorting_2/</guid>
      <description>Problem Jay likes sequences, so he use to playing with a sequence of size N. He will transform the sequence according to K queries, and the format and process of the queries are as follows:&#xA;L R X: Let&amp;rsquo;s say the sequence sorted in ascending order is A[1], A[2], …, A[N].</description>
    </item>
    <item>
      <title>How to Sort Data</title>
      <link>http://jaym-oh.github.io/posts/algorithm/sorting/sorting_1/</link>
      <pubDate>Fri, 29 Mar 2024 16:00:00 +0000</pubDate>
      <guid>http://jaym-oh.github.io/posts/algorithm/sorting/sorting_1/</guid>
      <description>Introduction What this post focus on This posting will cover almost every concept of How to sort (primary). Plus, I&amp;rsquo;ll post realistic algorithm problem of our real world so that you can apply those concept to real world problem and learn how to use it. I really hope so. Let&amp;rsquo;s see the below example.</description>
    </item>
    <item>
      <title>Data Type in DB</title>
      <link>http://jaym-oh.github.io/posts/database/db_15_1/</link>
      <pubDate>Fri, 29 Mar 2024 09:00:00 +0000</pubDate>
      <guid>http://jaym-oh.github.io/posts/database/db_15_1/</guid>
      <description>저장 공간 char vs varchar: 둘다 문자열을 저장할 수 있는 데이터 타입, 차이는 고정/가변 길이 두 타입 모두 한 글자를 저장하기 위해</description>
    </item>
    <item>
      <title>Data Type in DB</title>
      <link>http://jaym-oh.github.io/posts/database/db_15_2/</link>
      <pubDate>Fri, 29 Mar 2024 09:00:00 +0000</pubDate>
      <guid>http://jaym-oh.github.io/posts/database/db_15_2/</guid>
      <description>ENUM 테이블의 구조에 나열된 목록 중 하나의 값을 가질 수 있다. 1 2 3 4 5 6 create table tb_enum ( fd_enum enum(&amp;#39;PROCESSING&amp;#39;, &amp;#39;FAILURE&amp;#39;, &amp;#39;SUCCESS&amp;#39;) ); -- 매핑된 문자열이 아닌</description>
    </item>
    <item>
      <title>Before you begin</title>
      <link>http://jaym-oh.github.io/posts/docker/docker_1/</link>
      <pubDate>Thu, 28 Mar 2024 09:00:00 +0000</pubDate>
      <guid>http://jaym-oh.github.io/posts/docker/docker_1/</guid>
      <description>&lt;p&gt;Welecome to the &lt;code&gt;Docker&lt;/code&gt; series and I&amp;rsquo;m gonna study this book, &lt;code&gt;Learn Docker in a Month of Lunches&lt;/code&gt;(2020), by own my word.&lt;/p&gt;&#xA;&lt;p&gt;This series consists of 4 parts:&lt;/p&gt;&#xA;&lt;ol&gt;&#xA;&lt;li&gt;Understaning Docker Containers &amp;amp; Images&lt;/li&gt;&#xA;&lt;li&gt;Running Distributed Applications in Containers&lt;/li&gt;&#xA;&lt;li&gt;Running at Scale with a Container Orchestrator&lt;/li&gt;&#xA;&lt;li&gt;Getting Your Containers Ready for Production&lt;/li&gt;&#xA;&lt;/ol&gt;&#xA;&lt;p&gt;This is the first post about series &lt;code&gt;Docker&lt;/code&gt;.&#xA;In this part, you can get up to speed quickly on the core Docker concepts: containers, images, and registries. you&amp;rsquo;ll learn how to run applications in containers, package your own applications in containers, and share those applications for other people to use. You&amp;rsquo;ll also learn about storing data in Docker volumes and how you can run stateful apps in containers. After throughing this chapter, you&amp;rsquo;ll be comfortable with all the fundamentals of Docker, and you&amp;rsquo;ll be learning with best pracices baked in from the start.&lt;/p&gt;</description>
    </item>
    <item>
      <title>How to use Extended Markdown</title>
      <link>http://jaym-oh.github.io/posts/markdown/extendedmd/</link>
      <pubDate>Mon, 12 Feb 2024 09:00:00 +0000</pubDate>
      <guid>http://jaym-oh.github.io/posts/markdown/extendedmd/</guid>
      <description>Code Code in line Example: basic: &amp;ldquo;name&amp;rdquo; options: you can add options featuring as what you want to highlight just add (primary), (tip), (warning), (success), (danger) with one white space name (primary) name (tip) name (warning) name (success) name (danger) Example of code block 1 2 3 4 5 6</description>
    </item>
  </channel>
</rss>
